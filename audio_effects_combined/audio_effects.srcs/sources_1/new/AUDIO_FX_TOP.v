`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// AY1718 Sem 1 EE2020 Project
// Project Name: Audio Effects
// Module Name: AUDIO_FX_TOP
// Team No.: 
// Student Names: 
// Matric No.:
// Description: 
// 
// Work Distribution:
//////////////////////////////////////////////////////////////////////////////////


module AUDIO_FX_TOP(
    input CLK,            // 100MHz FPGA clock
    input  J_MIC3_Pin3,   // PmodMIC3 audio input data (serial)
    output J_MIC3_Pin1,   // PmodMIC3 chip select, 20kHz sampling clock
    output J_MIC3_Pin4,   // PmodMIC3 serial clock (generated by module SPI.v)
     
    output J_DA2_Pin1,    // PmodDA2 sampling clock (generated by module DA2RefComp.vhd)
    output J_DA2_Pin2,    // PmodDA2 Data_A, 12-bit speaker output (generated by module DA2RefComp.vhd)
    output J_DA2_Pin3,    // PmodDA2 Data_B, not used (generated by module DA2RefComp.vhd)
    output J_DA2_Pin4,     // PmodDA2 serial clock, 50MHz clock
    output [11:0] LED,
    input [6:0] sw,
    input PB_UP,
    input PB_LOUD,
    output [3:0] Anode,
    output [6:0] LED_7_segment,
    input [2:0] pitch_option,
    input [3:0] mode,
    input PB_SONGS,
    input [1:0] song_sw
    );

    //////////////////////////////////////////////////////////////////////////////////
    // Clock Divider Module: Generate necessary clocks from 100MHz FPGA CLK
    // Please create the clock divider module and instantiate it here.
      wire clk_20k;
      wire clk_50M;

      
      clock_generator_20 clock_20k(CLK, 2499, clk_20k);
      clock_generator_20 clock_50M(CLK, 0, clk_50M);

       
      
      
  
     //////////////////////////////////////////////////////////////////////////////////
     //SPI Module: Converting serial data into a 12-bit parallel register
     //Do not change the codes in this area
       wire [11:0] MIC_in;
       SPI u1 (CLK, clk_20k, J_MIC3_Pin3, J_MIC3_Pin1, J_MIC3_Pin4, MIC_in);
   
    /////////////////////////////////////////////////////////////////////////////////////
    // Real-time Audio Effect Features
    // Please create modules to implement different features and instantiate them here   
      
      wire [11:0] speaker_out;
      wire octave_sound;
      wire song, song_sound;
      wire [11:0] speaker_out_1;
      wire [11:0] speaker_out_2;
      wire [11:0] speaker_out_3;
      wire [11:0] speaker_out_4;
      wire [11:0] speaker_out_5;
      
      speaker_mic_led sml (clk_20k, MIC_in, LED, speaker_out_4); //Task 1
      button pushbutton (CLK, PB_UP, sw, octave_sound); //octave for B
      loudness loud (CLK, PB_LOUD, sw, octave_sound, speaker_out_1); //loudness for B
      seven_segment seven_segment_piano (CLK, sw, Anode, LED_7_segment); //led segment for B
      one_second_delay osd (clk_20k, clk_20k, MIC_in, speaker_out_2); //one_second for A
      pitch_option po (pitch_option, clk_20k, MIC_in, speaker_out_3);  //pitch_shifter for A
      songs songs_mod (CLK, song_sw, song); //songs for extra feature
      amplify_songs amplify_song_mod (CLK, PB_SONGS, song, speaker_out_5); // loudness songs for extra feature
     
   assign speaker_out  =  (mode[0] == 1) ? speaker_out_2 :
                          (mode[1] == 1) ? speaker_out_3 :
                          (mode[2] == 1) ? speaker_out_1 : 
                          (mode[3] == 1) ? speaker_out_5 :
                          speaker_out_4; 
     
    /////////////////////////////////////////////////////////////////////////////////////
    //DAC Module: Digital-to-Analog Conversion
    //Do not change the codes in this area        
      DA2RefComp u2(clk_50M, clk_20k, speaker_out, , 1'b0, J_DA2_Pin2, J_DA2_Pin3, J_DA2_Pin4, J_DA2_Pin1,);
      
          
  //////////////////////////////////////////////////////////////////////////////////
  
    

endmodule
